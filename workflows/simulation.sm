localrules: all_simulate_data,all_apply_ggm_simulation

#------------------------------------------------------------------------------
# Simulate ground truth and data for simulation study
#------------------------------------------------------------------------------
RUNS = 100
rule simulate_data:
        input:
                data=DCOHORT_DATA + "lolipop/{sentinel}_meqtl.rds",
                ranges=DRANGES + "{sentinel}_meqtl.rds",
                priors=DPRIORS + "{sentinel}_meqtl.rds"
        output:
                DSIM_DATA + "{sentinel}.RData"
        threads: 8
        resources:
                mem_mb=1200
        params:
                sentinel="{sentinel}",
                runs=RUNS,
                time="04:00:00"
        conda:
                "envs/bioR.yaml"
        log:
                "logs/simulation/simulate_data/{sentinel}.log"
        benchmark:
                "benchmarks/simulation/simulate_data/{sentinel}.bmk"
        script:
                "../scripts/simulation/simulate-data.R"

rule all_simulate_data:
	input:
		expand(DSIM_DATA + "{sentinel}.RData", sentinel=MEQTL.sentinel)

#------------------------------------------------------------------------------
# Apply ggm on simulated data
#------------------------------------------------------------------------------
ITERATIONS = range(1,RUNS+1)

rule apply_ggm_simulation:
        input:
                data=DSIM_DATA + "{sentinel}.RData",
                ppi_db=PPI_DB,
		cpg_context = "results/current/cpg_context.rds"
        output:
                DSIM_FITS + "{sentinel}-iter{iteration}.RData"
        params:
                iteration="{iteration}",
                time="24:00:00"
        threads: 8
        resources:
                mem_mb=4500
        conda:
                "envs/bioR.yaml"
        log:
                "logs/simulation/apply_ggm/{sentinel}-iter{iteration}.log"
        benchmark:
                "benchmarks/simulation/apply_ggm/{sentinel}-iter{iteration}.bmk"
        script:
                "../scripts/simulation/apply-ggm-simulation.R"

rule all_apply_ggm_simulation:
	input:
		expand(DSIM_FITS + "{sentinel}-iter{iteration}.RData", sentinel=MEQTL.sentinel,
		iteration=ITERATIONS)

#------------------------------------------------------------------------------
# Validate a simulation run
#------------------------------------------------------------------------------
rule validate_ggm_simulation:
        input:
                DSIM_FITS + "{sentinel}-iter{iteration}.RData"
        output:
                DSIM_VALIDATION + "{sentinel}-iter{iteration}.txt"
        threads: 1
        resources:
                mem_mb=200
        params:
                iteration="{iteration}",
                time="00:10:00"
        conda:
                "envs/bioR.yaml"
        log:
                "logs/simulation/validate_ggm/{sentinel}-iter{iteration}.log"
        script:
                "../scripts/simulation/validate-ggm-simulation.R"

#------------------------------------------------------------------------------
# Target rule to validate all simulation runs
#------------------------------------------------------------------------------
TEMP = glob_wildcards(DSIM_FITS + "{sentinel}-iter{iteration}.RData")
rule validate_subset:
        input: expand(DSIM_VALIDATION + "{sentinel}-iter{iter}.txt",zip, sentinel=TEMP.sentinel, iter=TEMP.iteration)

#rule validate_all:
#       input: expand(DSIM_VALIDATION + "{sentinel}-iter{iter}.txt", sentinel=LISTS.sentinel, iter=ITERATIONS)

#------------------------------------------------------------------------------
# Create simulation report
#------------------------------------------------------------------------------
rule gather_simulation_results:
	input:
		expand(DSIM_VALIDATION + "{sentinel}-iter{iter}.txt", sentinel=MEQTL.sentinel, iter=ITERATIONS)
	output:
		"results/current/biogrid/simulation/validation/"
	shell:
		"""
		cat {input} | sort -r | uniq > {output}
		"""

#rule summarize_simulation:
#       input:
#               expand(DSIM_VALIDATION + "{sentinel}-iter{iter}.txt", sentinel=TEMP.sentinel, iter=TEMP.iteration)
#       output:
#               "results/current/simulation/simulation.html"
#       log:
#               "logs/simulation/summarize_simulation.log"
#       script:
#               "../scripts/simulation/summarize-simulation.Rmd"


