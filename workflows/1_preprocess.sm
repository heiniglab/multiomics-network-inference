configfile: "config.json"

include: "common.sm"

# ------------------------------------------------------------------------------
# Target rule
# ------------------------------------------------------------------------------
rule all:
	input:
		DHOTSPOTS + "eqtlgen_thres" + config["hots_thres"] + "/summary.pdf",
		DHOTSPOTS + "meqtl_thres" + config["hots_thres"] + "/summary.pdf"

# ------------------------------------------------------------------------------
# Prune the eQTLGen SNPs
# ------------------------------------------------------------------------------
rule prune_snps:
	input:
		eqtl = "data/current/eqtl_gen/trans-eQTL_significant_20181017.txt.gz",
		dosage = "data/current/kora/snp_dosages/MAF001/full_sorted.bgz",
		individuals = "results/current/kora_individuals.csv"
	output:
		full = "results/current/eqtlgen/full.rds",
		pruned = "results/current/eqtlgen/pruned.rds"
	threads:
		4
	params:
		ld_max_dist = 1e6,
		r2_min = 0.2
	log:
		"logs/prune_snps.log"
	benchmark:
		"benchmarks/prune_snps.bmk"
	script:
		"../scripts/prune_snps.R"

#------------------------------------------------------------------------------
# SUmmarize the overlap of trans-genes between neighbouring hotspots
# before and after SNP pruning
#------------------------------------------------------------------------------
rule summarize_transgene_overlap:
	input:
		"results/current/eqtlgen/full.rds"
	output:
		"results/current/eqtlgen/transgene_overlap_summary_ht" + config["hots_thres"] + ".pdf"
	params:
		hotspot_threshold = config["hots_thres"]
	script:
		"../scripts/summarize_transgene_overlap.R"

#------------------------------------------------------------------------------
# Preprocess the sample-mapping sheet for kora
#------------------------------------------------------------------------------
rule preprocess_kora_individuals:
        input:
                "data/current/kora/individuals.csv"
        output:
                "results/current/kora_individuals.csv"
        shell:
                """
                awk 'BEGIN {{ FS = ";" }} ; {{ if ($1 != "" && $5 != "" && $6 != "" ) print }}' {input} | sed s/zz_nr_//g > {output}
                """

#------------------------------------------------------------------------------
# Gather kora data in single file for more convenient postprocessing.
# We use the results in this file during hotspot extractions to see for which
# sentinels genotype data is available.
#
# @author Johann Hawe <johann.hawe@helmholtz-muenchen.de>
#
#------------------------------------------------------------------------------
rule prepare_kora_data:
        input:
                genotypes="data/current/kora/snp_dosages/MAF001/full_sorted.bgz",
                expression="data/current/kora/expression/kora_f4_normalized.Rdata",
                expression_cov="data/current/kora/expression/technical_covariables_kora_f4.Rdata",
                methylation="data/current/kora/methylation/KF4_beta_qn_bmiq.RData",
                methylation_cov="data/current/kora/methylation/control_probe_pcs_n1727.RData",
                individuals="results/current/kora_individuals.csv",
                impute_indiv="data/current/kora/imputation_individuals.txt",
                trans_meqtl="data/current/meQTLs/transpairs_r02_110117_converted_1MB.txt",
                houseman="data/current/kora/methylation/Houseman/KF4_QN_estimated_cell_distribution_meanimpute473_lessThanOneTRUE.csv",
                kora_ceqtl="data/current/kora/eqtl/kora-cis-eqtls.csv",
                cosmo="data/current/meQTLs/cosmopairs_combined_151216.RData",
                eqtl_gen="data/current/eqtl_gen/trans-eQTL_significant_20181017.txt.gz"
        output:
                "results/current/ggmdata_kora.RData"
        resources:
                mem_mb=23000
        log:
                "logs/prepare-kora-data.log"
        threads: 4
        benchmark:
                "benchmarks/prepare-kora-data.bmk"
        script:
                "../scripts/prepare-kora-data.R"

#------------------------------------------------------------------------------
# Prepare lolipop data for more convenient postprocessing
#------------------------------------------------------------------------------
rule prepare_lolipop_data:
        input:
                lolipop="data/current/meQTLs/ggmdata_201017.RData"
        output: "results/current/ggmdata_lolipop.RData"
        resources:
                mem_mb=2000
        log:
                "logs/prepare-lolipop-data.log"
        benchmark:
                "benchmarks/prepare-lolipop-data.bmk"
        script:
                "scripts/prepare-lolipop-data.R"

# ------------------------------------------------------------------------------
# Extract eQTLgen hotspots
# ------------------------------------------------------------------------------
rule extract_eqtlgen_hotspots:
	input:
		eqtl="results/current/eqtlgen/pruned.rds",
		kora_data = "results/current/ggmdata_kora.RData",
		lolipop_data = "results/current/ggmdata_lolipop.RData"
	output:
		plot=DHOTSPOTS + "eqtlgen_thres{hots_thres}/summary.pdf",
		loci_dir=directory(DHOTSPOTS + "eqtlgen_thres{hots_thres}/loci/")
	script:
		"../scripts/extract_eqtlgen_hotspots.R"

# ------------------------------------------------------------------------------
# Extract meQTL hotspots
# ------------------------------------------------------------------------------
rule extract_meqtl_hotspots:
	input:
		meqtl="data/current/meQTLs/transpairs_r02_110117_converted_1MB.txt",
		kora_data = "results/current/ggmdata_kora.RData",
		lolipop_data = "results/current/ggmdata_lolipop.RData"
	output:
		plot=DHOTSPOTS + "meqtl_thres{hots_thres}/summary.pdf",
		table=DHOTSPOTS + "meqtl_thres{hots_thres}/hotspots.tsv",
		loci_dir=directory(DHOTSPOTS + "meqtl_thres{hots_thres}/loci/")
	script:
		"../scripts/extract_meqtl_hotspots.R"
